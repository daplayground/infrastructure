---
# # Solving API issue.
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: svc-longhorn-headers
#   namespace: longhorn-system
# spec:
#   headers:
#     customRequestHeaders:
#       X-Forwarded-Proto: "https"
# ---
# # HTTPS Ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: longhorn-ingress
#   namespace: longhorn-system
#   annotations:
#     # HTTPS as entry point
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     # Enable TLS
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     # Use Basic Auth Midleware configured
#     traefik.ingress.kubernetes.io/router.middlewares:
#       traefik-basic-auth@kubernetescrd,
#       longhorn-system-svc-longhorn-headers@kubernetescrd
#     # Enable cert-manager to create automatically the SSL certificate and store in Secret
#     cert-manager.io/cluster-issuer: letsencrypt-prod
#     cert-manager.io/common-name: storage.rpi.{{ domain }}
# spec:
#   tls:
#   - hosts:
#     - storage.rpi.{{ domain }}
#     secretName: storage-tls
#   rules:
#   - host: storage.rpi.{{ domain }}
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: longhorn-frontend
#             port:
#               number: 80
# ---
# # http ingress for http->https redirection
# kind: Ingress
# apiVersion: networking.k8s.io/v1
# metadata:
#   name: longhorn-redirect
#   namespace: longhorn-system
#   annotations:
#     # Use redirect Midleware configured
#     traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect@kubernetescrd
#     # HTTP as entrypoint
#     traefik.ingress.kubernetes.io/router.entrypoints: web
# spec:
#   rules:
#     - host: storage.rpi.{{ domain }}
#       http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: longhorn-frontend
#               port:
#                 number: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: longhorn-ui
  name: longhorn-frontend
  namespace: longhorn-system
spec:
  ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
      name: web
  selector:
    app: longhorn-ui
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: longhorn-frontend
  namespace: longhorn-system
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`storage.rpi.{{ domain }}`)
      kind: Rule
      services:
        - name: longhorn-frontend
          port: 8000
  tls:
    secretName: traefik-prod-tls
